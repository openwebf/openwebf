interface DOMMatrixReadonly {
    readonly is2D: DartImpl<boolean>;
    readonly isIdentity: DartImpl<boolean>;
    m11: double;
    m12: double;
    m13: double;
    m14: double;
    m21: double;
    m22: double;
    m23: double;
    m24: double;
    m31: double;
    m32: double;
    m33: double;
    m34: double;
    m41: double;
    m42: double;
    m43: double;
    m44: double;
    a: double;
    b: double;
    c: double;
    d: double;
    e: double;
    f: double;
    flipX(): DOMMatrix;
    flipY(): DOMMatrix;
    inverse(): DOMMatrix;
    // multiply(matrix: DOMMatrix): DOMMatrix;
    rotateAxisAngle(x:number, y:number, z:number, angle:number): DOMMatrix;
    rotate(rotX:number, rotY:number, rotZ:number): DOMMatrix;
    rotateFromVector(x:number, y:number): DOMMatrix;
    scale(scaleX: number, scaleY: number, scaleZ: number, originX: number, originY: number, originZ: number): DOMMatrix;
    scale3d(scale: number, originX: number, originY: number, originZ: number): DOMMatrix;
    // scaleNonUniform(): DOMMatrix;
    skewX(sx: double): DOMMatrix;
    skewY(sy: double): DOMMatrix;
    // toFloat32Array(): double[];
    // toFloat64Array(): double[];
    // toJSON(): DartImpl<JSON>;
    toString(): string;
    // TODO DOMPoint
    // transformPoint(): DartImpl<DOMPoint>;
    translate(tx:double, ty:double, tz:double): DOMMatrix;
    // fromFloat32Array(): StaticMethod<DOMMatrix>;
    // fromFloat64Array(): StaticMethod<DOMMatrix>;
    // fromMatrix(): StaticMethod<DOMMatrix>;
    new(init?: double[]): DOMMatrixReadonly;
}